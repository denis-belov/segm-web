{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/cxx-specific.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/imports.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/memory.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/wasm-wrapper.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread4/thread4.1.worker.js"],"names":["bool","addr","length","arguments","undefined","mem","typed_array_constructor","memory","buffer","char","int","short","long","size_t","uint8_t","self","Uint8Array","int8_t","Int8Array","uint16_t","Uint16Array","int16_t","Int16Array","uint32_t","Uint32Array","int32_t","Int32Array","uint64_t","BigUint64Array","int64_t","BigInt64Array","float","double","long_double","size","addr2","name","globals","exports","value","getCStringLength","_addr","vend","memory_views","UI8","c_string","c_string2","constructor","convertUint8ArrayToDomString","std_string","result","__getStdStringData","__getStdStringSize","std_string2","std_vector","type","__getStdVectorData","__getStdVectorSize","std_vector_char","std_vector_int","std_vector_short","std_vector_long","std_vector_size_t","std_vector_addr","std_vector_uint8_t","std_vector_int8_t","std_vector_uint16_t","std_vector_int16_t","std_vector_uint32_t","std_vector_int32_t","std_vector_uint64_t","std_vector_int64_t","std_vector_float","std_vector_double","std_vector_long_double","resizeStdVector","__resizeStdVector","updateStdVectorData","_data","set","demangleCxxNames","_this","demangled_name_max_length","demangled_name_addr","__malloc","exports_demangled_reduced","exports_demangled","Object","keys","reduce","_name","startsWith","concat","convertDomStringToUint8Array","demangled_name","__demangleCxxName","replace","Array","isArray","push","first_entry","__free","Class","wasm_wrapper","_Class","_createClass","input","_classCallCheck","_wasm_wrapper$addr","_wasm_wrapper$addr2","_slicedToArray","_defineProperty","filter","member_name","includes","forEach","member_name_trimmed","wasm_object","_member_name$match","parameters","match","split","overloaded","prototype","_len","args","_key","apply","_typeof","New","NewWrapper","IDLE_FUNCTION","imports_lib","console_log","types_addr","values_addr","_console","arg_types","_wasm_wrapper$size_t","__any_value_size","_wasm_wrapper$size_t2","any_value_size","i","type_name","type_names","value_addr","interp_log","console","log","console_log2","_console2","date_now","Date","now","host_loop","function_addr","_function","_len2","_key2","setInterval","host_animation_loop","loop","requestAnimationFrame","_toConsumableArray","rdty_sleep","duration","DATA_ADDR","sleeping","asyncify_stop_rewind","I32","asyncify_start_unwind","setTimeout","asyncify_start_rewind","window","Worker","SharedArrayBuffer","assign","runThread","thread_addr","thread_types_addr","thread_values_addr","threads","thread","Thread2","joinThread","async_count","async_promise","Promise","resolve","async_promise_setter","val","promise","then","async_func","async_args","terminateThread","terminate","Atomics","atomic_lock","atomic_unlock","UNLOCKED","LOCKED","atomic_addr","__atomic_malloc_index","wait","Infinity","compareExchange","store","notify","that","options","thread_stack_size","typed_array_name","_self$typed_array_nam","_inherits","_class","_super","_createSuper","_this2","ArrayBuffer","call","__allocated","_possibleConstructorReturn","Error","byteOffset","BYTES_PER_ELEMENT","key","_class2","byteLength","get","__getData","function_name","_self$typed_array_nam2","kind","type_name_index","__sizeof","typed_array_constructor_name","typed_array_constructor_wasm","typed_array_constructor_wasm2","interp_thread","Boolean","interp_arg","str","I8","UI16","I16","UI32","UI64","I64","F32","Float32Array","F64","Float64Array","_regeneratorRuntime","e","t","r","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","err","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","protoProps","staticProps","obj","_toPrimitive","String","hint","prim","toPrimitive","res","Number","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","from","test","iter","len","arr2","__CODE_TYPE_BYTECODE__","__CODE_TYPE_FUNCTION__","ERROR_LOG","WARN_LOG","DEBUG_INFO","DEBUG_INFO_PUSH","_len3","_key3","DEBUG_INFO_LOG","thread_id","label","_console3","navigator","hardwareConcurrency","WasmWrapper","__wasm_wrapper__","ThreadPromiseBunch","running_count","run","callback1","callback2","callback_next1","callback_next2","all","resolves","_runAsync","_callee","_args","_callee$","_context","t0","t1","runAsync","_x","run2","_runAsync2","_callee2","_args2","_callee2$","_context2","runAsync2","_x2","__indirect_function_table","_async","_callee3","_len4","_key4","_args3","_callee3$","_context3","asyncify_stop_unwind","_x3","_instantiate","_callee4","_ref","_this3","wasm_module_imports","imports_custom","wasm_module","code","debug","imports_aggregate","wasm_module_instance","_callee4$","_context4","imports_thread","env","module","import_custom","wasm_module_import","LOG","WebAssembly","instantiate","_x4","_init","_callee5","_ref2","_ref2$memory","_ref2$memory_params","memory_params","_ref2$imports","_ref2$stack_pointer","stack_pointer","_ref2$configureMemory","configureMemory","_ref2$forceLocalMemor","forceLocalMemory","_ref2$initGlobals","initGlobals","_ref2$demangleCxxName","_ref2$debug","code_type","code_temp","_wasm_module_imports$","_wasm_module_imports$2","imported_memory","shared_memory_allowed","memory_desc","_wasm_module_imports","_this$demangleCxxName","_callee5$","_context5","minimum","initial","maximum","shared","imports","Function","atob","charCodeAt","getImports","compile","Module","import_desc","Memory","Math","imul","__main","__thread_id","init","_x5","_this4","prefix_length","export_name","uint8array","text_decoder","decode","text","text_encoder","encode","_testSimd","_callee6","wasm_buffer","_callee6$","_context6","testSimd","_testAtomics","_callee7","_callee7$","_context7","testAtomics","TextDecoder","TextEncoder","getNewThread","Thread","getNewThread2","getNewThread3","Thread3","getNewThread4","Thread4","initThreads","_ref3","_callee8","thread_count","_this5","_callee8$","_context8","fill","map","_x6","terminateThreads","cxx_specific_functions","wasm","onmessage","_onmessage","init_data","data","_wasm$exports","work_data","postMessage"],"mappings":"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","file":"thread4.1.worker.worker.worker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"thread4.1.worker\": 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t\"../../renderity/wasm-wrapper/src/test-atomic/build/test.wasm\": function() {\n \t\t\treturn {\n\n \t\t\t};\n \t\t},\n \t\t\"../../renderity/wasm-wrapper/src/test-simd/build/test.wasm\": function() {\n \t\t\treturn {\n\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(__webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".worker.worker.js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"0\":[\"../../renderity/wasm-wrapper/src/test-atomic/build/test.wasm\"],\"1\":[\"../../renderity/wasm-wrapper/src/test-simd/build/test.wasm\"]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"../../renderity/wasm-wrapper/src/test-atomic/build/test.wasm\":\"c8e8b144c658ecc0cc8b\",\"../../renderity/wasm-wrapper/src/test-simd/build/test.wasm\":\"15c3acd181c9cc8c1774\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js?!./node_modules/@open-wc/webpack-import-meta-loader/webpack-import-meta-loader.js!./node_modules/conditional-compile-loader/index.js?!../../renderity/wasm-wrapper/src/threads/thread4/thread4.1.worker.js\");\n","// TODO: new for C++ types (e.g. _new('uint32_t', 16)).\n\nexport default\n{\n\t// https://en.cppreference.com/w/cpp/language/types\n\tbool (addr, length = 1) { return new this.mem.bool.typed_array_constructor(this.memory.buffer, addr, length); },\n\tchar (addr, length = 1) { return new this.mem.char.typed_array_constructor(this.memory.buffer, addr, length); },\n\tint (addr, length = 1) { return new this.mem.int.typed_array_constructor(this.memory.buffer, addr, length); },\n\tshort (addr, length = 1) { return new this.mem.short.typed_array_constructor(this.memory.buffer, addr, length); },\n\tlong (addr, length = 1) { return new this.mem.long.typed_array_constructor(this.memory.buffer, addr, length); },\n\tsize_t (addr, length = 1) { return new this.mem.size_t.typed_array_constructor(this.memory.buffer, addr, length); },\n\taddr (addr, length = 1) { return new this.mem.addr.typed_array_constructor(this.memory.buffer, addr, length); },\n\tuint8_t (addr, length = 1) { return new self.Uint8Array(this.memory.buffer, addr, length); },\n\tint8_t (addr, length = 1) { return new self.Int8Array(this.memory.buffer, addr, length); },\n\tuint16_t (addr, length = 1) { return new self.Uint16Array(this.memory.buffer, addr, length); },\n\tint16_t (addr, length = 1) { return new self.Int16Array(this.memory.buffer, addr, length); },\n\tuint32_t (addr, length = 1) { return new self.Uint32Array(this.memory.buffer, addr, length); },\n\tint32_t (addr, length = 1) { return new self.Int32Array(this.memory.buffer, addr, length); },\n\tuint64_t (addr, length = 1) { return new self.BigUint64Array(this.memory.buffer, addr, length); },\n\tint64_t (addr, length = 1) { return new self.BigInt64Array(this.memory.buffer, addr, length); },\n\tfloat (addr, length = 1) { return new this.mem.float.typed_array_constructor(this.memory.buffer, addr, length); },\n\tdouble (addr, length = 1) { return new this.mem.double.typed_array_constructor(this.memory.buffer, addr, length); },\n\tlong_double (addr, length = 1) { return new self.Uint8Array(this.memory.buffer, addr, length * this.mem.long_double.size); },\n\n\taddr2 (name, length = 1) { return this.addr(this.globals[name] || this.exports[name].value, length); },\n\n\tgetCStringLength (addr)\n\t{\n\t\tconst _addr = addr;\n\n\t\t// Find terminating \"\\0\".\n\t\tfor (let vend = 0; ; ++vend)\n\t\t{\n\t\t\t// if (this.char(_addr + vend)[0] === 0)\n\t\t\tif (this.memory_views.UI8[_addr + vend] === 0)\n\t\t\t{\n\t\t\t\treturn vend;\n\t\t\t}\n\t\t}\n\n\t\t// return this.exports.__strlen(addr);\n\t},\n\n\tc_string (addr)\n\t{\n\t\treturn this.char(addr, this.getCStringLength(addr));\n\t\t// return this.memory_views.UI8.subarray(addr, addr + this.getCStringLength(addr));\n\t},\n\n\tc_string2 (addr)\n\t{\n\t\treturn this.constructor.convertUint8ArrayToDomString(this.c_string(addr));\n\t\t// return this.constructor.convertUint8ArrayToDomString(this.memory_views.UI8.subarray(addr, addr + this.getCStringLength(addr)));\n\t},\n\n\tstd_string (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.char\n\t\t\t(\n\t\t\t\tthis.exports.__getStdStringData(addr),\n\n\t\t\t\tthis.exports.__getStdStringSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t},\n\n\tstd_string2 (addr)\n\t{\n\t\treturn this.constructor.convertUint8ArrayToDomString(this.std_string(addr));\n\t},\n\n\tstd_vector (addr, type)\n\t{\n\t\tconst result =\n\t\t\tthis[type]\n\t\t\t(\n\t\t\t\tthis.exports.__getStdVectorData(addr),\n\n\t\t\t\tthis.exports.__getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t},\n\n\t// std_vector_bool (addr) { return this.std_vector(addr, 'bool'); },\n\tstd_vector_char (addr) { return this.std_vector(addr, 'char'); },\n\tstd_vector_int (addr) { return this.std_vector(addr, 'int'); },\n\tstd_vector_short (addr) { return this.std_vector(addr, 'short'); },\n\tstd_vector_long (addr) { return this.std_vector(addr, 'long'); },\n\tstd_vector_size_t (addr) { return this.std_vector(addr, 'size_t'); },\n\tstd_vector_addr (addr) { return this.std_vector(addr, 'addr'); },\n\tstd_vector_uint8_t (addr) { return this.std_vector(addr, 'uint8_t'); },\n\tstd_vector_int8_t (addr) { return this.std_vector(addr, 'int8_t'); },\n\tstd_vector_uint16_t (addr) { return this.std_vector(addr, 'uint16_t'); },\n\tstd_vector_int16_t (addr) { return this.std_vector(addr, 'int16_t'); },\n\tstd_vector_uint32_t (addr) { return this.std_vector(addr, 'uint32_t'); },\n\tstd_vector_int32_t (addr) { return this.std_vector(addr, 'int32_t'); },\n\tstd_vector_uint64_t (addr) { return this.std_vector(addr, 'uint64_t'); },\n\tstd_vector_int64_t (addr) { return this.std_vector(addr, 'int64_t'); },\n\tstd_vector_float (addr) { return this.std_vector(addr, 'float'); },\n\tstd_vector_double (addr) { return this.std_vector(addr, 'double'); },\n\tstd_vector_long_double (addr) { return this.std_vector(addr, 'long_double'); },\n\n\tresizeStdVector (addr, size)\n\t{\n\t\tthis.exports.__resizeStdVector(addr, size);\n\t},\n\n\tupdateStdVectorData (addr, type, _data)\n\t{\n\t\tthis.std_vector(addr, type).set(_data);\n\t},\n\n\n\n\tdemangleCxxNames ()\n\t{\n\t\tconst demangled_name_max_length = 1024;\n\t\tconst demangled_name_addr = this.exports.__malloc(demangled_name_max_length);\n\n\t\tconst exports_demangled_reduced = {};\n\n\t\tconst exports_demangled =\n\t\t\tObject.keys(this.exports)\n\t\t\t\t.reduce\n\t\t\t\t(\n\t\t\t\t\t(exports_demangled, _name) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (_name.startsWith('_Z'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst name = `${ _name }\\0`;\n\n\t\t\t\t\t\t\tthis.memory_views.UI8.set(this.constructor.convertDomStringToUint8Array(name), demangled_name_addr);\n\n\t\t\t\t\t\t\tconst demangled_name =\n\t\t\t\t\t\t\t\tthis.constructor.convertUint8ArrayToDomString\n\t\t\t\t\t\t\t\t(this.c_string(this.exports.__demangleCxxName(demangled_name_addr)))\n\t\t\t\t\t\t\t\t\t.replace(/, /g, ',');\n\n\t\t\t\t\t\t\tif (exports_demangled[demangled_name])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (Array.isArray(exports_demangled[demangled_name]))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\texports_demangled[demangled_name].push(this.exports[_name]);\n\n\t\t\t\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst first_entry = exports_demangled[demangled_name];\n\n\t\t\t\t\t\t\t\texports_demangled[demangled_name] = [ first_entry, this.exports[_name] ];\n\n\t\t\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\texports_demangled[demangled_name] = this.exports[_name];\n\n\t\t\t\t\t\t\texports_demangled_reduced[demangled_name.replace(/\\([^)]*\\)/g, '')] = this.exports[_name];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t},\n\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\tthis.exports.__free(demangled_name_addr);\n\n\t\treturn { exports_demangled, exports_demangled_reduced };\n\t},\n\n\n\n\t// TODO: rename to \"getClass\".\n\tClass (name)\n\t{\n\t\tconst wasm_wrapper = this;\n\n\n\n\t\tclass _Class\n\t\t{\n\t\t\tstatic name = name;\n\n\t\t\tstatic overloaded = {};\n\n\n\n\t\t\tconstructor (input)\n\t\t\t{\n\t\t\t\tif (typeof input === 'number')\n\t\t\t\t{\n\t\t\t\t\tthis.addr = input;\n\t\t\t\t}\n\t\t\t\telse if (typeof input === 'string')\n\t\t\t\t{\n\t\t\t\t\t[ this.addr ] = wasm_wrapper.addr2(input);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.Object.keys(this.exports_demangled)\n\t\t\t.filter\n\t\t\t(\n\t\t\t\tmember_name => member_name.includes(name),\n\t\t\t)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\tmember_name =>\n\t\t\t\t{\n\t\t\t\t\tlet member_name_trimmed = member_name.replace(`${ name }::`, '').replace(/\\((.*)+/g, '');\n\n\t\t\t\t\t// Some objects may be exported twice from wasm. TODO: why does it occur?\n\t\t\t\t\tconst wasm_object =\n\t\t\t\t\t\twasm_wrapper.exports_demangled[member_name][0] || wasm_wrapper.exports_demangled[member_name];\n\n\t\t\t\t\tif (typeof wasm_object === 'function')\n\t\t\t\t\t{\n\t\t\t\t\t\tconst parameters =\n\t\t\t\t\t\t\tmember_name.match(/\\((.*)+/g)?.[0].replace(/\\(|( )|\\)/g, '').split(',');\n\n\t\t\t\t\t\tif (parameters.length && parameters[0] === '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparameters.length = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// static function\n\t\t\t\t\t\tif (parameters.length === wasm_object.length)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (_Class[member_name_trimmed])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!_Class.overloaded[member_name_trimmed])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_Class.overloaded[member_name_trimmed] = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t++_Class.overloaded[member_name_trimmed];\n\n\t\t\t\t\t\t\t\tmember_name_trimmed += `_o${ _Class.overloaded[member_name_trimmed] }`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_Class[member_name_trimmed] = wasm_object;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// non-static function\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (_Class.prototype[member_name_trimmed])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!_Class.overloaded[member_name_trimmed])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_Class.overloaded[member_name_trimmed] = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t++_Class.overloaded[member_name_trimmed];\n\n\t\t\t\t\t\t\t\tmember_name_trimmed += `_o${ _Class.overloaded[member_name_trimmed] }`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Non-wrapped\n\t\t\t\t\t\t\t_Class[`proto_${ member_name_trimmed }`] = wasm_object;\n\n\t\t\t\t\t\t\t_Class.prototype[member_name_trimmed] =\n\t\t\t\t\t\t\t\tfunction (...args)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn wasm_object(this.addr, ...args);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof wasm_object === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\t_Class[member_name_trimmed] = wasm_object;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t// Presume New() returns a pointer\n\t\tif (_Class.New)\n\t\t{\n\t\t\t_Class.NewWrapper = () => new _Class(_Class.New());\n\t\t}\n\n\n\n\t\treturn _Class;\n\t},\n};\n","const IDLE_FUNCTION = () => 0;\n\n\n\nexport default function (wasm_wrapper)\n{\n\tconst imports_lib =\n\t{\n\t\tconsole_log: (size, types_addr, values_addr) =>\n\t\t{\n\t\t\tconst arg_types = wasm_wrapper.size_t(types_addr, size);\n\n\t\t\tconst args = new Array(size);\n\n\t\t\tconst [ any_value_size ] = wasm_wrapper.size_t(wasm_wrapper.globals.__any_value_size);\n\n\t\t\tfor (let i = 0; i < size; ++i)\n\t\t\t{\n\t\t\t\tconst type_name = wasm_wrapper.type_names[arg_types[i]];\n\n\t\t\t\tconst value_addr = values_addr + (any_value_size * i);\n\n\t\t\t\targs[i] = wasm_wrapper.mem[type_name].interp_log(value_addr);\n\t\t\t}\n\n\t\t\tconsole.log('%cWASM:', 'color: #bada55', ...args);\n\t\t},\n\n\t\tconsole_log2: (...args) =>\n\t\t{\n\t\t\tconsole.log('%cWASM:', 'color: #bada55', ...args);\n\t\t},\n\n\t\tdate_now: () => Date.now(),\n\n\t\thost_loop: (function_addr, ...args) =>\n\t\t{\n\t\t\tconst _function = wasm_wrapper.function(function_addr);\n\n\t\t\t// setInterval(_function, 1000, ...args);\n\t\t\tsetInterval(_function, 0, ...args);\n\t\t},\n\n\t\thost_animation_loop: (function_addr) =>\n\t\t{\n\t\t\tconst _function = wasm_wrapper.function(function_addr);\n\n\t\t\tconst loop = () =>\n\t\t\t{\n\t\t\t\trequestAnimationFrame(_function);\n\n\t\t\t\t_function(...args);\n\t\t\t};\n\n\t\t\tloop();\n\t\t},\n\n\t\t// For using this function WASM code must be processed by\n\t\t// wasm-opt tool with flags: \"-O1\", \"--asyncify\".\n\t\trdty_sleep: (duration) =>\n\t\t{\n\t\t\t// Global state for running the program.\n\n\t\t\tconst DATA_ADDR = 16;\n\n\t\t\tif (wasm_wrapper.sleeping)\n\t\t\t{\n\t\t\t\t// We are called as part of a resume/rewind. Stop sleeping.\n\t\t\t\t// console.log('...resume');\n\t\t\t\twasm_wrapper.exports.asyncify_stop_rewind();\n\t\t\t\twasm_wrapper.sleeping = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are called in order to start a sleep/unwind.\n\t\t\t\t// console.log('sleep...');\n\t\t\t\t// Fill in the data structure. The first value has the stack location,\n\t\t\t\t// which for simplicity we can start right after the data structure itself.\n\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR >> 2] = DATA_ADDR + 8;\n\t\t\t\t// The end of the stack will not be reached here anyhow.\n\n\t\t\t\t// TODO: use stack_size instead of 1024 * 1024.\n\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR + 4 >> 2] = 1024 * 1024;\n\t\t\t\twasm_wrapper.exports.asyncify_start_unwind(DATA_ADDR);\n\t\t\t\twasm_wrapper.sleeping = true;\n\n\t\t\t\t// // Resume after the proper delay.\n\t\t\t\t// setTimeout\n\t\t\t\t// (\n\t\t\t\t// \t() =>\n\t\t\t\t// \t{\n\t\t\t\t// \t\t// console.log('timeout ended, starting to rewind the stack');\n\t\t\t\t// \t\twasm_wrapper.exports.asyncify_start_rewind(DATA_ADDR);\n\t\t\t\t// \t\t// The code is now ready to rewind; to start the process, enter the\n\t\t\t\t// \t\t// first function that should be on the call stack.\n\t\t\t\t// \t},\n\n\t\t\t\t// \tduration,\n\t\t\t\t// );\n\n\t\t\t\tsetTimeout(wasm_wrapper.exports.asyncify_start_rewind, duration, DATA_ADDR);\n\t\t\t}\n\t\t},\n\t};\n\n\t// For using these functions WASM code must be processed by\n\t// wasm-opt tool with flags: \"-O1\", \"--asyncify\".\n\t// If this is main worker.\n\tif\n\t(\n\t\tself.window &&\n\t\tself.Worker &&\n\t\tself.SharedArrayBuffer\n\t)\n\t{\n\t\tObject.assign\n\t\t(\n\t\t\timports_lib,\n\n\t\t\t{\n\t\t\t\trunThread: (thread_addr, function_addr, thread_types_addr, thread_values_addr) =>\n\t\t\t\t{\n\t\t\t\t\tif (!wasm_wrapper.threads)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.threads = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst thread =\n\t\t\t\t\t\tnew wasm_wrapper.constructor.Thread2\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\twasm_wrapper,\n\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tfunction_addr,\n\t\t\t\t\t\t\t\twasm_wrapper.exports.__getStdVectorData(thread_types_addr),\n\t\t\t\t\t\t\t\twasm_wrapper.exports.__getStdVectorData(thread_values_addr)\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t);\n\n\t\t\t\t\twasm_wrapper.threads[thread_addr] = thread;\n\t\t\t\t},\n\n\t\t\t\tjoinThread: (thread_addr) =>\n\t\t\t\t{\n\t\t\t\t\twasm_wrapper.async_count = wasm_wrapper.async_count || 0;\n\n\t\t\t\t\t++wasm_wrapper.async_count;\n\n\t\t\t\t\tif (wasm_wrapper.async_count === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.async_promise =\n\t\t\t\t\t\t\tnew Promise\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresolve =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\twasm_wrapper.async_promise_setter = (val) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (val)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst DATA_ADDR = 16;\n\n\t\t\t\t\tif (wasm_wrapper.sleeping)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.exports.asyncify_stop_rewind();\n\n\t\t\t\t\t\twasm_wrapper.sleeping = false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR >> 2] = DATA_ADDR + 8;\n\t\t\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR + 4 >> 2] = 1024 * 1024;\n\n\t\t\t\t\t\twasm_wrapper.exports.asyncify_start_unwind(DATA_ADDR);\n\n\t\t\t\t\t\twasm_wrapper.sleeping = true;\n\n\t\t\t\t\t\twasm_wrapper.threads[thread_addr].promise\n\t\t\t\t\t\t\t.then\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\twasm_wrapper.exports.asyncify_start_rewind(DATA_ADDR);\n\n\t\t\t\t\t\t\t\t\twasm_wrapper.async_func(...wasm_wrapper.async_args);\n\n\t\t\t\t\t\t\t\t\tif (wasm_wrapper.async_count % 2 === 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twasm_wrapper.async_promise_setter(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tterminateThread: (thread_addr) =>\n\t\t\t\t{\n\t\t\t\t\twasm_wrapper.threads[thread_addr].terminate();\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tif\n\t(\n\t\t// self.Worker && // Safari doesn't allow workers to create Worker objects. Only main worker is allowed.\n\t\tself.SharedArrayBuffer &&\n\t\tself.Atomics\n\t)\n\t{\n\t\tif (self.window)\n\t\t{\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\timports_lib,\n\n\t\t\t\t{\n\t\t\t\t\tatomic_lock: IDLE_FUNCTION,\n\t\t\t\t\tatomic_unlock: IDLE_FUNCTION,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst UNLOCKED = 0;\n\t\t\tconst LOCKED = 1;\n\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\timports_lib,\n\n\t\t\t\t{\n\t\t\t\t\tatomic_lock (atomic_addr)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst __atomic_malloc_index = atomic_addr / 4;\n\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tself.Atomics.wait(wasm_wrapper.memory_views.I32, __atomic_malloc_index, LOCKED, Infinity);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (self.Atomics.compareExchange(wasm_wrapper.memory_views.I32, __atomic_malloc_index, UNLOCKED, LOCKED) === LOCKED);\n\t\t\t\t\t},\n\n\t\t\t\t\tatomic_unlock (atomic_addr)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst __atomic_malloc_index = atomic_addr / 4;\n\n\t\t\t\t\t\tself.Atomics.store(wasm_wrapper.memory_views.I32, __atomic_malloc_index, UNLOCKED);\n\t\t\t\t\t\tself.Atomics.notify(wasm_wrapper.memory_views.I32, __atomic_malloc_index, 1);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\treturn imports_lib;\n};\n","export default function ()\n{\n\tconst that = this;\n\n\n\n\tthis.options =\n\t\tObject.assign\n\t\t(\n\t\t\t{\n\t\t\t\t// 1024 b * 1024 b == 1048576 b == 1 mb\n\t\t\t\tthread_stack_size: 0x0100000,\n\t\t\t},\n\n\t\t\tthis.options,\n\t\t);\n\n\n\n\t[\n\t\t'Uint8Array',\n\t\t'Int8Array',\n\t\t'Uint16Array',\n\t\t'Int16Array',\n\t\t'Uint32Array',\n\t\t'Int32Array',\n\t\t'Uint8Array',\n\t\t'Int8Array',\n\t\t'BigUint64Array',\n\t\t'BigInt64Array',\n\t\t'Float32Array',\n\t\t'Float64Array',\n\t]\n\t\t.forEach\n\t\t(\n\t\t\ttyped_array_name =>\n\t\t\t{\n\t\t\t\tif (self[typed_array_name])\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * byteOffset is an address in WASM memory.\n\t\t\t\t\t *\n\t\t\t\t\t * Array has to be used carefully, especially on mobile devices.\n\t\t\t\t\t * Undefined behavior may be occured in the following cases:\n\t\t\t\t\t * - Transferring array between workers (for both ArrayBuffer and SharedArrayBuffer).\n\t\t\t\t\t * - Calling slice().\n\t\t\t\t\t * ...\n\t\t\t\t\t */\n\n\t\t\t\t\tthis[typed_array_name] = class extends self[typed_array_name]\n\t\t\t\t\t{\n\t\t\t\t\t\tconstructor (...args)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (args[0] instanceof self.ArrayBuffer || (self.SharedArrayBuffer && args[0] instanceof self.SharedArrayBuffer))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (args[0] === that.memory.buffer)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsuper(...args);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = false;\n\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthrow new Error('wasm-wrapper typed array can not be backed by array buffer other than wasm-wrapper instance memory buffer.');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet length = 0;\n\n\t\t\t\t\t\t\tif (typeof args[0] === 'object')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// length = args[0].length;\n\t\t\t\t\t\t\t\t[ { length } ] = args;\n\n\t\t\t\t\t\t\t\tif (args[0] instanceof that[typed_array_name] || args[0] instanceof that[`${ typed_array_name }2`])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconst [ { byteOffset } ] = args;\n\n\t\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconst byteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\t\tthis.set(args[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlength = args[0];\n\n\t\t\t\t\t\t\t\tconst byteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\tthis.__allocated = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t__free () { that.exports.__free(this.byteOffset); }\n\n\t\t\t\t\t\t// slice (...args) {}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis[`${ typed_array_name }2`] = class\n\t\t\t\t\t{\n\t\t\t\t\t\tconstructor (...args)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet byteOffset = 0;\n\t\t\t\t\t\t\tlet length = 0;\n\n\t\t\t\t\t\t\tthis.__allocated = false;\n\n\t\t\t\t\t\t\tif (args[0] instanceof self.ArrayBuffer || (self.SharedArrayBuffer && args[0] instanceof self.SharedArrayBuffer))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (args[0] === that.memory.buffer)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbyteOffset = args[1] || 0;\n\t\t\t\t\t\t\t\t\tlength = args[2] || (that.memory.buffer.byteLength / self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length });\n\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthrow new Error('wasm-wrapper typed array can not be backed by array buffer other than wasm-wrapper instance memory buffer.');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (typeof args[0] === 'object')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[ { length } ] = args;\n\n\t\t\t\t\t\t\t\t// if (args[0].buffer === that.memory.buffer)\n\t\t\t\t\t\t\t\tif (args[0] instanceof that[typed_array_name] || args[0] instanceof that[`${ typed_array_name }2`])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t[ { byteOffset } ] = args;\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbyteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length });\n\n\t\t\t\t\t\t\t\t\tthis.set(args[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[ length ] = args;\n\n\t\t\t\t\t\t\t\tbyteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tget buffer () { return that.memory.buffer; }\n\n\t\t\t\t\t\t__free () { that.exports.__free(this.byteOffset); }\n\n\t\t\t\t\t\t__getData () { return new self[typed_array_name](that.memory.buffer, this.byteOffset, this.length); }\n\t\t\t\t\t};\n\n\t\t\t\t\t[\n\t\t\t\t\t\t'set',\n\t\t\t\t\t\t'slice',\n\t\t\t\t\t]\n\t\t\t\t\t\t.forEach\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tfunction_name =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis[`${ typed_array_name }2`].prototype[function_name] = function (...args)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn (new self[typed_array_name](that.memory.buffer, this.byteOffset, this.length))[function_name](...args);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\n\n\t{\n\t\tthis.mem =\n\t\t// TODO: wrap into \"cxx\" prop.\n\t\t// TODO: add \"views\" props instead of using this.memory_views.\n\t\t{\n\t\t\t'bool': { kind: 'Uint' },\n\t\t\t'char': { kind: 'Uint' },\n\t\t\t'int': { kind: 'Int' },\n\t\t\t'short': { kind: 'Int' },\n\t\t\t'long': { kind: 'Int' },\n\t\t\t'size_t': { kind: 'Uint' },\n\t\t\t'addr': { kind: 'Uint' },\n\t\t\t'uint8_t': { kind: 'Uint' },\n\t\t\t'int8_t': { kind: 'Int' },\n\t\t\t'uint16_t': { kind: 'Uint' },\n\t\t\t'int16_t': { kind: 'Int' },\n\t\t\t'uint32_t': { kind: 'Uint' },\n\t\t\t'int32_t': { kind: 'Int' },\n\t\t\t'uint64_t': { kind: 'Uint' },\n\t\t\t'int64_t': { kind: 'Int' },\n\t\t\t'float': { kind: 'Float' },\n\t\t\t'double': { kind: 'Float' },\n\t\t\t'long_double': { kind: 'Float' },\n\t\t\t'c_string': {},\n\t\t};\n\n\t\tthis.type_names = Object.keys(this.mem);\n\n\t\tthis.type_names\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\t(type_name, type_name_index) =>\n\t\t\t\t{\n\t\t\t\t\tconst size = this.exports.__sizeof(type_name_index);\n\n\t\t\t\t\tlet typed_array_constructor_name = `${ this.mem[type_name].kind }${ size * 8 }Array`;\n\n\t\t\t\t\tif (!this[typed_array_constructor_name])\n\t\t\t\t\t{\n\t\t\t\t\t\ttyped_array_constructor_name = `Big${ typed_array_constructor_name }`;\n\t\t\t\t\t}\n\n\t\t\t\t\tObject.assign\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.mem[type_name],\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\ttyped_array_constructor: self[typed_array_constructor_name],\n\t\t\t\t\t\t\ttyped_array_constructor_wasm: this[typed_array_constructor_name],\n\t\t\t\t\t\t\ttyped_array_constructor_wasm2: this[`${ typed_array_constructor_name }2`],\n\t\t\t\t\t\t\tinterp_log: addr => this[type_name](addr)[0],\n\t\t\t\t\t\t\tinterp_thread: addr => this[type_name](addr),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\tthis.mem.bool.interp_log = addr => Boolean(this.bool(addr)[0]),\n\n\t\tthis.mem.c_string.interp_log = addr => this.c_string2(this.addr(addr)[0]);\n\t\tthis.mem.c_string.interp_thread = addr => this.addr(addr);\n\t\tthis.mem.c_string.interp_arg = str => (new this.mem.char.typed_array_constructor_wasm(this.constructor.convertDomStringToUint8Array(str))).byteOffset;\n\t}\n\n\n\n\t{\n\t\tthis.memory_views = {};\n\n\t\tthis.memory_views.UI8 = new self.Uint8Array(this.memory.buffer);\n\t\tthis.memory_views.UI8 = new self.Uint8Array(this.memory.buffer);\n\t\tthis.memory_views.I8 = new self.Int8Array(this.memory.buffer);\n\t\tthis.memory_views.UI16 = new self.Uint16Array(this.memory.buffer);\n\t\tthis.memory_views.I16 = new self.Int16Array(this.memory.buffer);\n\t\tthis.memory_views.UI32 = new self.Uint32Array(this.memory.buffer);\n\t\tthis.memory_views.I32 = new self.Int32Array(this.memory.buffer);\n\t\tthis.memory_views.I32 = new self.Int32Array(this.memory.buffer);\n\t\tif (self.BigUint64Array) { this.memory_views.UI64 = new self.BigUint64Array(this.memory.buffer); }\n\t\tif (self.BigInt64Array) { this.memory_views.I64 = new self.BigInt64Array(this.memory.buffer); }\n\t\tthis.memory_views.F32 = new self.Float32Array(this.memory.buffer);\n\t\tthis.memory_views.F64 = new self.Float64Array(this.memory.buffer);\n\t}\n}\n","/**\n * https://webassembly.org\n * https://webassembly.github.io/spec\n * https://github.com/WebAssembly\n * https://developer.mozilla.org/en-US/docs/WebAssembly\n * https://wasi.dev\n * https://lld.llvm.org/WebAssembly.html\n * https://github.com/bytecodealliance/wasmtime/blob/main/docs/WASI-documents.md\n * https://docs.wasmtime.dev/\n * https://v8.dev/\n *\n *\n *\n * Using TypedArray.subarray() is preferred\n * when accessing to data\n * to avoid extra memory allocation.\n *\n *\n *\n * Strange std::string behavior:\n * if std::string data length <=11, std::string object address is the same with its data;\n * if >11, std::string object name stores address of beginning of the data.\n * So in second case one can use WasmWrapper::c_string method to get string bytes.\n * Maybe it's not related to data length, but to dynamic memory allocation.\n *\n *\n *\n * If memory is shared then maximum memory size is specified at compilation.\n *\n *\n *\n * Passing argument by reference works as passing by pointer.\n * So, functions with reference parameters expect address instead of value.\n *\n *\n *\n * TODO: determination capabiity of what wasm memory type is being used.\n *\n *\n *\n * 1 page == 65536 bytes == 0.0625 mb.\n * 1 mb == 16 pages.\n * 1gb == 16384 pages.\n * 4gb == 65536 pages (maximum memory size for wasm32).\n */\n\n\n\n/*\neslint-disable\n\nmax-statements,\n*/\n\n\n\n// Webpack arraybuffer-loader is required.\n// import test_simd_wasm_buffer from './test-simd/build/clang-wasm32/output/wasm/test-simd.wasm';\n\nimport configureMemory from './memory';\nimport getImports from './imports';\nimport cxx_specific_functions from './cxx-specific';\n\n\n\nconst __CODE_TYPE_BYTECODE__ = 0;\nconst __CODE_TYPE_FUNCTION__ = 1;\n\n\n\nconst IDLE_FUNCTION = () => 0;\n\nconst ERROR_LOG = (...args) => console.log(`%c${ args[0] }`, 'background-color: red; padding: 2px;', ...args.slice(1));\nconst WARN_LOG = (...args) => console.log(`%c${ args[0] }`, 'background-color: #8B8000; padding: 2px;', ...args.slice(1));\n\nconst DEBUG_INFO = [];\n\nconst DEBUG_INFO_PUSH = (...args) => DEBUG_INFO.push(args);\n\nconst DEBUG_INFO_LOG = thread_id =>\n{\n\tDEBUG_INFO.forEach(label => console.log(`%c${ thread_id }: ${ label[0] }`, 'background-color: #00858A; padding: 2px;', ...label.slice(1)));\n\n\tDEBUG_INFO.length = 0;\n};\n\n\n\nDEBUG_INFO_PUSH(`WASM CONCURRENCY: ${ self.navigator.hardwareConcurrency }`);\n\n\n\nclass WasmWrapper\n{\n\tstatic text_decoder = new self.TextDecoder('utf-8');\n\tstatic text_encoder = new self.TextEncoder();\n\n\tstatic convertUint8ArrayToDomString (uint8array)\n\t{\n\t\t// return WasmWrapper.text_decoder.decode(uint8_array);\n\t\t// return WasmWrapper.text_decoder.decode(uint8array.slice());\n\t\treturn WasmWrapper.text_decoder.decode(new self.Uint8Array(uint8array)); // Decoding view of shared buffer is not allowed so need new instance.\n\t}\n\n\tstatic convertDomStringToUint8Array (text)\n\t{\n\t\treturn WasmWrapper.text_encoder.encode(text);\n\t}\n\n\tstatic async testSimd ()\n\t{\n\t\tlet result = false;\n\n\t\ttry\n\t\t{\n\t\t\t// webpack arraybuffer-loader has to be installed when using the library with soures files.\n\t\t\t// const wasm_buffer = (await import('./test-simd/build/clang-wasm32/output/wasm/test-simd.wasm')).default;\n\t\t\tconst wasm_buffer = (await import('./test-simd/build/test.wasm')).default;\n\n\t\t\tconst wasm_module = await WebAssembly.compile(wasm_buffer);\n\n\t\t\tconst instance = await WebAssembly.instantiate(wasm_module);\n\n\t\t\t// // Webpack since version 4 has embedded WASM parser.\n\t\t\t// // MIME type \"application/wasm\" must be defined for \".wasm\" extension on server.\n\t\t\t// // TODO: use another type of importing ?\n\t\t\t// await import('./test-simd/build/clang-wasm32/output/wasm/test-simd.wasm');\n\n\t\t\tresult = true;\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tERROR_LOG(`WASM SIMD TEST FAILED: ${ error }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM SIMD: ${ result ? 'ON' : 'OFF' }`);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * memory.atomic.wait can't be called in main worker\n\t * so need to make the test in another worker.\n\t */\n\n\tstatic async testAtomics ()\n\t{\n\t\tlet result = false;\n\n\t\ttry\n\t\t{\n\t\t\tconst wasm_buffer = (await import('./test-atomic/build/test.wasm')).default;\n\n\t\t\tconst wasm_module = await WebAssembly.compile(wasm_buffer);\n\n\t\t\tconst instance = await WebAssembly.instantiate(wasm_module);\n\n\t\t\tresult = true;\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tERROR_LOG(`WASM ATOMIC TEST FAILED: ${ error }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM ATOMIC: ${ result ? 'ON' : 'OFF' }`);\n\n\t\treturn result;\n\t}\n\n\tconstructor (options = {})\n\t{\n\t\tself.__wasm_wrapper__ = this;\n\n\t\tthis.options = options;\n\n\t\tconst wasm_wrapper = this;\n\n\n\n\t\tclass ThreadPromiseBunch\n\t\t{\n\t\t\tconstructor ()\n\t\t\t{\n\t\t\t\t// TODO: rename to run_count.\n\t\t\t\tthis.running_count = 0;\n\t\t\t}\n\n\t\t\trun (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\t++this.running_count;\n\n\t\t\t\tif (this.running_count > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.callback_next1 = callback1;\n\t\t\t\t\tthis.callback_next2 = callback2;\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all(callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(\n\t\t\t\t\t\tresolves =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback2(resolves);\n\n\t\t\t\t\t\t\tif (this.running_count > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\t\treturn this.run(this.callback_next1, this.callback_next2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tasync runAsync (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\t++this.running_count;\n\n\t\t\t\tif (this.running_count > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.callback_next1 = callback1;\n\t\t\t\t\tthis.callback_next2 = callback2;\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all(await callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(\n\t\t\t\t\t\tresolves =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback2(resolves);\n\n\t\t\t\t\t\t\tif (this.running_count > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\t\treturn this.runAsync(this.callback_next1, this.callback_next2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\trun2 (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\treturn Promise.all(callback1()).then(callback2);\n\t\t\t}\n\n\t\t\tasync runAsync2 (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\treturn Promise.all(await callback1()).then(callback2);\n\t\t\t}\n\t\t}\n\n\t\tthis.ThreadPromiseBunch = ThreadPromiseBunch;\n\t}\n\n\tfunction (addr)\n\t{\n\t\treturn this.exports.__indirect_function_table.get(addr);\n\t}\n\n\tasync async (_function, ...args)\n\t{\n\t\tthis.async_args = args;\n\n\t\t(this.async_func = _function)(...args);\n\n\t\tthis.exports.asyncify_stop_unwind();\n\n\t\tawait this.async_promise;\n\n\t\tthis.async_count = 0;\n\t}\n\n\tasync instantiate ({ wasm_module_imports, imports_lib, imports_custom, wasm_module, code, debug })\n\t{\n\t\t// Object for passing to threads.\n\t\tthis.imports_thread = { env: {} };\n\n\t\tObject.keys(imports_custom)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\tmodule =>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(imports_custom[module])\n\t\t\t\t\t\t.forEach\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\timport_custom =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!this.imports_thread[module])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.imports_thread[module] = {};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.imports_thread[module][import_custom] = 0;\n\n\t\t\t\t\t\t\t\t// TODO: use \"|=\" operator ?\n\t\t\t\t\t\t\t\t// If (imports_custom[module][import_custom] === 0) then make it IDLE_FUNCTION.\n\t\t\t\t\t\t\t\timports_custom[module][import_custom] = imports_custom[module][import_custom] || IDLE_FUNCTION;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\tconst imports_aggregate = {};\n\n\t\tObject.assign(imports_aggregate, imports_custom);\n\n\t\tObject.assign\n\t\t(\n\t\t\timports_aggregate.env,\n\n\t\t\timports_lib\n\t\t);\n\n\t\t// Imported memory\n\t\tif (this.memory)\n\t\t{\n\t\t\timports_aggregate.env.memory = this.memory;\n\t\t}\n\n\t\twasm_module_imports\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\twasm_module_import =>\n\t\t\t\t{\n\t\t\t\t\tif (!imports_aggregate[wasm_module_import.module])\n\t\t\t\t\t{\n\t\t\t\t\t\timports_aggregate[wasm_module_import.module] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!imports_aggregate[wasm_module_import.module][wasm_module_import.name])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (debug)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tWARN_LOG(`Missed ${ wasm_module_import.module } import:`, wasm_module_import.name);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timports_aggregate[wasm_module_import.module][wasm_module_import.name] = IDLE_FUNCTION;\n\t\t\t\t\t\t// imports_aggregate[wasm_module_import.module][wasm_module_import.name] = () => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); };\n\n\t\t\t\t\t\t// if (wasm_module_import.name !== 'clock_time_get')\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// \timports_aggregate[wasm_module_import.module][wasm_module_import.name] = () => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); };\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t// if (wasm_module_import.name === 'fd_write')\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// \timports_aggregate[wasm_module_import.module][wasm_module_import.name] = (...args) => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); LOG(args.map(arg => this.CString2(arg))); };\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\tlet exports = null;\n\n\t\tLOG(wasm_module)\n\n\t\tif (wasm_module)\n\t\t{\n\t\t\tconst wasm_module_instance =\n\t\t\t\tawait WebAssembly.instantiate\n\t\t\t\t// await WebAssembly.instantiateStreaming\n\t\t\t\t(\n\t\t\t\t\twasm_module,\n\n\t\t\t\t\timports_aggregate,\n\t\t\t\t);\n\t\t\t\tLOG(wasm_module_instance)\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM MODULE INSTANCE:', wasm_module_instance);\n\t\t\t}\n\n\t\t\t// this.instance = wasm_module_instance;\n\n\t\t\t({ exports } = wasm_module_instance);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// imports_aggregate.wasi_snapshot_preview1 = {};\n\t\t\t// imports_aggregate.wasi_snapshot_preview1.fd_write = (...args) => LOG(args.map(arg => this.c_string2(arg)));\n\n\t\t\texports = code(imports_aggregate);\n\t\t}\n\n\t\t// Exported memory\n\t\tif (!this.memory)\n\t\t{\n\t\t\tthis.memory = exports.memory;\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM MEMORY: ${ this.memory.buffer.byteLength / 65536 } pages (${ this.memory.buffer.byteLength } bytes)`);\n\n\t\treturn exports;\n\t}\n\n\tasync init\n\t({\n\t\t// TODO: reorder.\n\t\tcode,\n\t\tmemory = null,\n\t\t// Initial and minimum memory sizes must be greater than heap base.\n\t\tmemory_params = { minimum: 1, initial: 1, maximum: 65536, shared: true },\n\t\timports: imports_custom = { env: {} },\n\t\tstack_pointer = undefined,\n\t\tconfigureMemory = true,\n\t\tforceLocalMemory = false,\n\t\tinitGlobals = true,\n\t\tdemangleCxxNames = false,\n\t\tdebug = false,\n\t})\n\t{\n\t\tlet code_type = null;\n\n\t\t// Code for passing to other WASM instances (e.g. threads).\n\t\tthis.code = code;\n\n\t\tif (typeof code === 'string')\n\t\t{\n\t\t\tif (code.startsWith('function'))\n\t\t\t{\n\t\t\t\tcode_type = __CODE_TYPE_FUNCTION__;\n\n\t\t\t\tcode = new Function(code);\n\n\t\t\t\tDEBUG_INFO_PUSH(`WASM CODE: string function -> ${ code.constructor.name }`);\n\t\t\t}\n\t\t\t// base64\n\t\t\telse\n\t\t\t{\n\t\t\t\tcode = Uint8Array.from(atob(code), c => c.charCodeAt(0));\n\n\t\t\t\t// TODO: Make code shared (if can) to speed up passing it to workers. DONE?\n\t\t\t\tif (self.SharedArrayBuffer)\n\t\t\t\t{\n\t\t\t\t\tconst code_temp = code;\n\n\t\t\t\t\tcode = new Uint8Array(new SharedArrayBuffer(code.length));\n\n\t\t\t\t\tcode.set(code_temp);\n\t\t\t\t}\n\n\t\t\t\tthis.code = code;\n\n\t\t\t\tcode_type = __CODE_TYPE_BYTECODE__;\n\n\t\t\t\tDEBUG_INFO_PUSH(`WASM CODE: string base64 -> ${ code.constructor.name }`);\n\t\t\t}\n\t\t}\n\t\telse if (typeof code === 'function')\n\t\t{\n\t\t\tcode_type = __CODE_TYPE_FUNCTION__;\n\n\t\t\tthis.code = code.toString();\n\n\t\t\tDEBUG_INFO_PUSH(`WASM CODE: function`);\n\t\t}\n\t\t// Code is an Uint8Array backed (SharedArrayBuffer optionally) or ArrayBuffer or SharedArrayBuffer.\n\t\t// UPD. SharedArrayBuffer can not be used as source for WebAssembly module, only for Uint8Array\n\t\t// backed by SharedArrayBuffer.\n\t\telse\n\t\t{\n\t\t\tcode_type = __CODE_TYPE_BYTECODE__;\n\n\t\t\tDEBUG_INFO_PUSH(`WASM CODE: ${ code.constructor.name }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM CODE: ${ code_type === __CODE_TYPE_BYTECODE__ ? 'BYTECODE' : 'FUNCTION' }`);\n\n\n\n\t\tconst imports_lib = getImports(this);\n\n\n\n\t\tif (code_type === __CODE_TYPE_BYTECODE__)\n\t\t{\n\t\t\tconst wasm_module = await WebAssembly.compile(code);\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM MODULE: ', wasm_module);\n\t\t\t}\n\n\t\t\tconst wasm_module_imports = WebAssembly.Module.imports(wasm_module);\n\t\t\t// const wasm_module_exports = WebAssembly.Module.exports(wasm_module);\n\n\t\t\tthis.memory = null;\n\n\t\t\t// Memory comes from WASM main worker instance to thread instance.\n\t\t\t// is always imported and shared.\n\t\t\tif (memory)\n\t\t\t{\n\t\t\t\tthis.memory = memory;\n\n\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: IMPORTED')\n\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: SHARED')\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst [ imported_memory ] =\n\t\t\t\t\twasm_module_imports\n\t\t\t\t\t\t.filter((import_desc) => (import_desc.kind === 'memory'));\n\n\t\t\t\tconst shared_memory_allowed = Boolean(self.SharedArrayBuffer) && !forceLocalMemory;\n\n\t\t\t\tif (imported_memory)\n\t\t\t\t{\n\t\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: IMPORTED')\n\n\t\t\t\t\tlet memory_desc = null;\n\n\t\t\t\t\tif (imported_memory.type)\n\t\t\t\t\t{\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * chrome://flags#enable-experimental-webassembly-features must be enabled\n\t\t\t\t\t\t * to access \"type\" property of \"imported_memory\". It contains memory\n\t\t\t\t\t\t * type and size info produced by the linker (aka defined in WebAssembly module).\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * \"--import-memory\" linker flag specifies whether memory is imported to WebAssembly module.\n\t\t\t\t\t\t * \"--shared-memory\" linker flag specifies whether memory is shared between WebAssembly instances.\n\t\t\t\t\t\t * \"--max-memory=N\" linker flag specifies maximum size of memory for WebAssembly instance.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * The advantqge of this is that we don't need to provide \"memory_params\"\n\t\t\t\t\t\t * to crate the memory object. Memory object is created automatically\n\t\t\t\t\t\t * after reading the \"imported_memory.type\".\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tmemory_desc =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinitial: imported_memory.type.minimum,\n\t\t\t\t\t\t\tmaximum: imported_memory.type.maximum || imported_memory.type.minimum,\n\t\t\t\t\t\t\tshared: imported_memory.type.shared && shared_memory_allowed,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// Parameters must match values produced by the linker (aka defined in WebAssembly module).\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmemory_desc =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// 65536 pages == 4gb, maximum possible memory size for 32-bit WebAssembly instance.\n\t\t\t\t\t\t\tinitial: memory_params.initial,\n\t\t\t\t\t\t\tmaximum: memory_params.maximum, // Must match \"--max-memory=N\" flag.\n\t\t\t\t\t\t\t// shared, // Must match \"--shared-memory\" flag.\n\t\t\t\t\t\t\tshared: memory_params.shared && shared_memory_allowed,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.memory = new WebAssembly.Memory(memory_desc);\n\n\t\t\t\t\tDEBUG_INFO_PUSH(`WASM MEMORY: ${ memory_desc.shared ? 'SHARED' : 'NOT SHARED' }`)\n\t\t\t\t}\n\t\t\t\t// TODO: add the case when memory is imported but can be created with arbitrary parameters.\n\t\t\t\t// Is this case possible? Meybe possible only when memory is not shared?\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: EXPORTED')\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.exports = await this.instantiate({ wasm_module_imports, imports_lib, imports_custom, wasm_module, debug });\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/**\n\t\t\t * Initializes WasmWrapper instance with JS code compiled from WASM with wasm2js.\n\t\t\t * In this case presume WASM instances don't use shared memory and exported memory.\n\t\t\t * Compiler option \"-matomics\" must not be used.\n\t\t\t * Linker option \"--shared-memory\" must not be used.\n\t\t\t * wasm2js options \"--disable-threads\", \"--emscripten\" must be used.\n\t\t\t */\n\n\t\t\tthis.memory = null;\n\n\t\t\tif (memory)\n\t\t\t{\n\t\t\t\tthis.memory = memory;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.memory = { buffer: new self.ArrayBuffer(Math.imul(memory_params.initial, memory_params.maximum)) };\n\t\t\t}\n\n\t\t\t// TODO: Find better solution to get import modules used.\n\t\t\t// Now it is hardcoded.\n\t\t\tconst wasm_module_imports =\n\t\t\t[\n\t\t\t\t{ module: 'env' },\n\t\t\t\t{ module: 'wasi_snapshot_preview1' },\n\t\t\t];\n\n\t\t\tthis.exports = await this.instantiate({ wasm_module_imports, imports_lib, imports_custom, code, debug });\n\t\t}\n\n\n\n\t\tif (configureMemory)\n\t\t{\n\t\t\tthis.configureMemory();\n\t\t}\n\n\t\tif (this.exports.__main)\n\t\t{\n\t\t\tthis.__thread_id = this.exports.__main(stack_pointer);\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_LOG(this.__thread_id);\n\t\t\t}\n\t\t}\n\n\t\tif (initGlobals)\n\t\t{\n\t\t\tthis.globals = this.initGlobals();\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM GLOBALS:', this.globals);\n\t\t\t}\n\t\t}\n\n\t\tif (demangleCxxNames)\n\t\t{\n\t\t\tconst { exports_demangled, exports_demangled_reduced } = this.demangleCxxNames();\n\n\t\t\tObject.assign(this, { exports_demangled, exports_demangled_reduced });\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM EXPORTS DEMANGLED: ', this.exports_demangled);\n\t\t\t\tDEBUG_INFO_PUSH('WASM EXPORTS DEMANGLED: ', this.exports_demangled_reduced);\n\t\t\t}\n\t\t}\n\t}\n\n\tinitGlobals ()\n\t{\n\t\tconst globals = {};\n\n\t\tconst prefix_length = '__EXPORT_ADDR__'.length;\n\n\t\tObject.keys(this.exports)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\texport_name =>\n\t\t\t\t{\n\t\t\t\t\tif (export_name.startsWith('__EXPORT_ADDR__'))\n\t\t\t\t\t{\n\t\t\t\t\t\tglobals[export_name.slice(prefix_length)] = this.exports[export_name]();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn globals;\n\t}\n}\n\n\n\nif (self.window)\n{\n\tWasmWrapper.prototype.getNewThread = function () { return new WasmWrapper.Thread(this); }\n\tWasmWrapper.prototype.getNewThread2 = function () { return new WasmWrapper.Thread2(this); }\n\tWasmWrapper.prototype.getNewThread3 = function () { return new WasmWrapper.Thread3(this); }\n\tWasmWrapper.prototype.getNewThread4 = function () { return new WasmWrapper.Thread4(this); }\n\n\tWasmWrapper.prototype.initThreads = async function (thread_count)\n\t{\n\t\tconst threads =\n\t\t\tnew Array(thread_count)\n\t\t\t\t.fill(null)\n\t\t\t\t.map(() => new WasmWrapper.Thread3(this));\n\n\t\tawait Promise.all(threads.map(thread => thread.init()));\n\n\t\treturn threads;\n\t};\n\n\tWasmWrapper.prototype.terminateThreads = function terminateThreads (threads)\n\t{\n\t\tthreads\n\t\t\t.reverse()\n\t\t\t.forEach(thread => thread.terminate());\n\t};\n}\n\n\n\nWasmWrapper.prototype.configureMemory = configureMemory;\n\nObject.assign(WasmWrapper.prototype, cxx_specific_functions);\n\n\n\nexport default WasmWrapper;\n","import WasmWrapper from '../../wasm-wrapper';\n\n\n\nconst wasm = new WasmWrapper();\n\n\n\nonmessage = ({ data: init_data }) =>\n{\n\tonmessage = ({ data: work_data }) =>\n\t{\n\t\tpostMessage(wasm.exports[work_data.function_name](...work_data.data));\n\t};\n\n\twasm.init(init_data).then(postMessage);\n};\n\nexport default 0;\n"],"sourceRoot":""}